name: Frontend

on:
  push:
    branches:
      - 'main'

  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: '19'
        cache: 'npm'
        cache-dependency-path: vote/package-lock.json
    - name: Install dependencies
      working-directory: ./vote
      run: npm i --dev
    - name: Run unit tests
      working-directory: ./vote
      run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:vote"
        push: true
        tags: ivanln26/iswiii-tif-frontend:${{ github.run_number }}

  gcr-deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        source: ./vote
        service: frontend
        env_vars: |
          BACKEND_URI=${{ secrets.BACKEND_URI }}
          REDIS_URI=${{ secrets.REDIS_URI }}
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
